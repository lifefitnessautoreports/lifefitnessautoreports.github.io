[2023-08-17 08:31:33] [22] [WARN] Reporting disabled: using no op test run registrar
[2023-08-17 08:31:33] [22] [INFO] TEST [Migration Backend Auto Tests - checkThatUserCanBeDeniedWithCamelCaseEmail] STARTED at [08:31:33 2023-08-17]
[2023-08-17 08:31:33] [22] [INFO] Setting default registration body values
[2023-08-17 08:31:33] [22] [INFO] Base properties loaded: api/core/controllers/user/postregistration/registration.properties
[2023-08-17 08:31:33] [22] [INFO] Get country code except embargoed ones
[2023-08-17 08:31:33] [22] [INFO] Waiting for 0.1 sec to cool Core Backend off
[2023-08-17 08:31:33] [22] [INFO] Registering user with lifeFitnessPostman+69409352@gmail.com email
[2023-08-17 08:31:34] [22] [INFO] Request method:	POST
Request URI:	https://dev-halo5api1.halo.fitness/halo-core-service/api/v1/users/registration
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Authorization=Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjYzODBlZjEyZjk1ZjkxNmNhZDdhNGNlMzg4ZDJjMmMzYzIzMDJmZGUiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoidGVzdFVzZXIiLCJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vbGZjby1kZXYiLCJhdWQiOiJsZmNvLWRldiIsImF1dGhfdGltZSI6MTY5MjI2MTA2MywidXNlcl9pZCI6IlZqTHhsb2xYUG5lNDc0RDZjZjVVNHNubFNUbDIiLCJzdWIiOiJWakx4bG9sWFBuZTQ3NEQ2Y2Y1VTRzbmxTVGwyIiwiaWF0IjoxNjkyMjYxMDYzLCJleHAiOjE2OTIyNjQ2NjMsImVtYWlsIjoidGVzdEBsaWZlZml0bmVzcy5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJ0ZXN0QGxpZmVmaXRuZXNzLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.IbDEqS8P405ZojS7GCg9v9UgOKu28nAKAbnsIcnXsQIVJuTYyddmU_VqMzCI3R32u8CpsKLsYMoWtciZS_zFQ_G7V5OEvenAQ1yT8_AYV9Xwe8rMlEhuCA8AK_aS4isTNeq1vl2ujb0bCjIO8-O7i35Dy7YotY-L2AzYWneeXY7-dEALmwzOEev_qqHY1II4OvwAq0fJLnttHLQRngtfYlmVy44oH-rmNquS8TszYPPhYw6jhDex9f6lJtd0rXqEh-aZXPpj5GdQvOk2GXmb2AjjbCvM0AA1VKAab46wBhYPRJ_4sGJqC0hoZYeMOFUnkFbymioeFU1pHcY6k4g98w
				Content-Type=application/json; charset=UTF-8
Body:
{
    "user": {
        "id": 0,
        "firstName": "Whitley",
        "lastName": "Gusikowski",
        "email": "lifeFitnessPostman+69409352@gmail.com",
        "preferredUnit": "METRICS",
        "preferredLanguageCode": "",
        "phoneNumber": "",
        "officePhoneNumber": "",
        "imageUrl": "",
        "imageKey": "",
        "thumbnailUrl": "",
        "thumbnailKey": "",
        "isAllowedMarketingEmails": null,
        "isAllowedFeedbackProviding": null,
        "useTerms": null
    },
    "facility": {
        "id": 0,
        "legacyId": 0,
        "ipAddress": "",
        "facilityGroupId": 0,
        "name": "Rath-Fay",
        "facilityTypeId": 0,
        "address": {
            "placeId": "f0c8c54e-a610-4eb2-93ae-c3b9dd7818f0",
            "primaryStreet": "38268 Rocco Vista",
            "secondaryStreet": "Suite 037",
            "city": "Berryville",
            "region": "",
            "zipCode": "223610",
            "state": "",
            "countryCode": "MT",
            "latitude": "30.6279",
            "longitude": "22.7323",
            "country": "string",
            "formatAddress": "string",
            "rawData": "string"
        },
        "contactNumber": "7657313137",
        "timezone": "",
        "openTime": "10:00 AM",
        "closeTime": "6:00 PM",
        "isOpen24Hours": true
    }
}
HTTP/1.1 201 Created
vary: Origin,Access-Control-Request-Method,Access-Control-Request-Headers
x-content-type-options: nosniff
x-xss-protection: 0
cache-control: no-cache, no-store, max-age=0, must-revalidate
pragma: no-cache
expires: 0
strict-transport-security: max-age=31536000 ; includeSubDomains
x-frame-options: DENY
content-type: application/json
X-Cloud-Trace-Context: bd1f31fb4f0b92dc619a0785aaae8921
Date: Thu, 17 Aug 2023 08:31:34 GMT
Server: Google Frontend
Content-Length: 975
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000

{
    "user": {
        "id": 42111,
        "firstName": "Whitley",
        "lastName": "Gusikowski",
        "email": "lifefitnesspostman+69409352@gmail.com",
        "preferredUnit": "METRICS",
        "preferredLanguageCode": "en-US",
        "phoneNumber": "",
        "officePhoneNumber": "",
        "profilePicUrl": null,
        "imageKey": "",
        "isEnabled": true,
        "isAllowedMarketingEmails": true,
        "isAllowedFeedbackProviding": true,
        "useTerms": true,
        "encodedPassword": null,
        "status": "ACTIVE",
        "roleIds": [
            2
        ]
    },
    "facility": {
        "id": 31125,
        "legacyId": 0,
        "ipAddress": "",
        "facilityGroupId": null,
        "name": "Rath-Fay",
        "facilityTypeId": null,
        "address": {
            "id": 31149,
            "placeId": "f0c8c54e-a610-4eb2-93ae-c3b9dd7818f0",
            "primaryStreet": "38268 Rocco Vista",
            "secondaryStreet": "Suite 037",
            "city": "Berryville",
            "region": "EMEA",
            "zipCode": "223610",
            "state": "",
            "countryCode": "MT",
            "latitude": 30.6279,
            "longitude": 22.7323,
            "country": "string",
            "formatAddress": "string",
            "rawData": "string"
        },
        "contactNumber": "7657313137",
        "timezone": "Africa/Tripoli (GMT+2:00)",
        "openTime": "10:00 AM",
        "closeTime": "6:00 PM",
        "isOpen24Hours": true
    }
}

[2023-08-17 08:31:34] [22] [INFO] Setting default registration body values
[2023-08-17 08:31:34] [22] [INFO] Base properties loaded: api/core/controllers/user/postregistration/registration.properties
[2023-08-17 08:31:34] [22] [INFO] Get country code except embargoed ones
[2023-08-17 08:31:34] [22] [INFO] Waiting for 0.1 sec to cool Core Backend off
[2023-08-17 08:31:34] [22] [INFO] Registering user with lifeFitnessPostman+17700381@gmail.com email
[2023-08-17 08:31:36] [22] [INFO] Request method:	POST
Request URI:	https://dev-halo5api1.halo.fitness/halo-core-service/api/v1/users/registration
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Authorization=Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjYzODBlZjEyZjk1ZjkxNmNhZDdhNGNlMzg4ZDJjMmMzYzIzMDJmZGUiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoidGVzdFVzZXIiLCJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vbGZjby1kZXYiLCJhdWQiOiJsZmNvLWRldiIsImF1dGhfdGltZSI6MTY5MjI2MTA2MywidXNlcl9pZCI6IlZqTHhsb2xYUG5lNDc0RDZjZjVVNHNubFNUbDIiLCJzdWIiOiJWakx4bG9sWFBuZTQ3NEQ2Y2Y1VTRzbmxTVGwyIiwiaWF0IjoxNjkyMjYxMDYzLCJleHAiOjE2OTIyNjQ2NjMsImVtYWlsIjoidGVzdEBsaWZlZml0bmVzcy5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJ0ZXN0QGxpZmVmaXRuZXNzLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.IbDEqS8P405ZojS7GCg9v9UgOKu28nAKAbnsIcnXsQIVJuTYyddmU_VqMzCI3R32u8CpsKLsYMoWtciZS_zFQ_G7V5OEvenAQ1yT8_AYV9Xwe8rMlEhuCA8AK_aS4isTNeq1vl2ujb0bCjIO8-O7i35Dy7YotY-L2AzYWneeXY7-dEALmwzOEev_qqHY1II4OvwAq0fJLnttHLQRngtfYlmVy44oH-rmNquS8TszYPPhYw6jhDex9f6lJtd0rXqEh-aZXPpj5GdQvOk2GXmb2AjjbCvM0AA1VKAab46wBhYPRJ_4sGJqC0hoZYeMOFUnkFbymioeFU1pHcY6k4g98w
				Content-Type=application/json; charset=UTF-8
Body:
{
    "user": {
        "id": 0,
        "firstName": "Del",
        "lastName": "Kovacek",
        "email": "lifeFitnessPostman+17700381@gmail.com",
        "preferredUnit": "METRICS",
        "preferredLanguageCode": "",
        "phoneNumber": "",
        "officePhoneNumber": "",
        "imageUrl": "",
        "imageKey": "",
        "thumbnailUrl": "",
        "thumbnailKey": "",
        "isAllowedMarketingEmails": null,
        "isAllowedFeedbackProviding": null,
        "useTerms": null
    },
    "placeId": "f0c8c54e-a610-4eb2-93ae-c3b9dd7818f0"
}
HTTP/1.1 201 Created
vary: Origin,Access-Control-Request-Method,Access-Control-Request-Headers
x-content-type-options: nosniff
x-xss-protection: 0
cache-control: no-cache, no-store, max-age=0, must-revalidate
pragma: no-cache
expires: 0
strict-transport-security: max-age=31536000 ; includeSubDomains
x-frame-options: DENY
content-type: application/json
X-Cloud-Trace-Context: 22fa1a5080b466b25976a6e46deb09fe
Date: Thu, 17 Aug 2023 08:31:36 GMT
Server: Google Frontend
Content-Length: 971
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000

{
    "user": {
        "id": 42112,
        "firstName": "Del",
        "lastName": "Kovacek",
        "email": "lifefitnesspostman+17700381@gmail.com",
        "preferredUnit": "METRICS",
        "preferredLanguageCode": "en-US",
        "phoneNumber": "",
        "officePhoneNumber": "",
        "profilePicUrl": null,
        "imageKey": "",
        "isEnabled": false,
        "isAllowedMarketingEmails": true,
        "isAllowedFeedbackProviding": true,
        "useTerms": true,
        "encodedPassword": null,
        "status": "PENDING",
        "roleIds": null
    },
    "facility": {
        "id": 31125,
        "legacyId": 0,
        "ipAddress": "",
        "facilityGroupId": null,
        "name": "Rath-Fay",
        "facilityTypeId": null,
        "address": {
            "id": 31149,
            "placeId": "f0c8c54e-a610-4eb2-93ae-c3b9dd7818f0",
            "primaryStreet": "38268 Rocco Vista",
            "secondaryStreet": "Suite 037",
            "city": "Berryville",
            "region": "EMEA",
            "zipCode": "223610",
            "state": "",
            "countryCode": "MT",
            "latitude": 30.6279,
            "longitude": 22.7323,
            "country": "string",
            "formatAddress": "string",
            "rawData": "string"
        },
        "contactNumber": "7657313137",
        "timezone": "Africa/Tripoli (GMT+2:00)",
        "openTime": "10:00 AM",
        "closeTime": "6:00 PM",
        "isOpen24Hours": true
    }
}

[2023-08-17 08:31:36] [22] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-17 08:31:36] [22] [INFO] Setting default IDP sign up body values
[2023-08-17 08:31:36] [22] [INFO] Setting up IDP method to SIGN_UP
[2023-08-17 08:31:36] [22] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-17 08:31:36] [22] [INFO] Sending PostSignUp IDP method to get access token
[2023-08-17 08:31:36] [22] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifefitnesspostman+17700381@gmail.com",
    "password": "lifefitnesspostman+17700381@gmail.com"
}
HTTP/1.1 400 Bad Request
Date: Thu, 17 Aug 2023 08:31:36 GMT
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Type: application/json; charset=UTF-8
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "error": {
        "code": 400,
        "message": "TOO_MANY_ATTEMPTS_TRY_LATER",
        "errors": [
            {
                "message": "TOO_MANY_ATTEMPTS_TRY_LATER",
                "domain": "global",
                "reason": "invalid"
            }
        ]
    }
}

[2023-08-17 08:31:36] [22] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-17 08:31:36] [22] [INFO] Setting default IDP sign up body values
[2023-08-17 08:31:36] [22] [INFO] Setting up IDP method to SIGN_IN_WITH_PASSWORD
[2023-08-17 08:31:36] [22] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-17 08:31:36] [22] [INFO] Sending PostSignInWithPassword IDP method to get access token
[2023-08-17 08:31:36] [22] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifefitnesspostman+17700381@gmail.com",
    "password": "lifefitnesspostman+17700381@gmail.com"
}
HTTP/1.1 400 Bad Request
Date: Thu, 17 Aug 2023 08:31:36 GMT
Pragma: no-cache
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Type: application/json; charset=UTF-8
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "error": {
        "code": 400,
        "message": "EMAIL_NOT_FOUND",
        "errors": [
            {
                "message": "EMAIL_NOT_FOUND",
                "domain": "global",
                "reason": "invalid"
            }
        ]
    }
}

[2023-08-17 08:31:36] [22] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-17 08:31:36] [22] [INFO] Setting default IDP sign up body values
[2023-08-17 08:31:36] [22] [INFO] Setting up IDP method to SIGN_UP
[2023-08-17 08:31:36] [22] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-17 08:31:36] [22] [INFO] Sending PostSignUp IDP method to get access token
[2023-08-17 08:31:37] [22] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifefitnesspostman+69409352@gmail.com",
    "password": "lifefitnesspostman+69409352@gmail.com"
}
HTTP/1.1 400 Bad Request
Date: Thu, 17 Aug 2023 08:31:37 GMT
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Type: application/json; charset=UTF-8
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "error": {
        "code": 400,
        "message": "TOO_MANY_ATTEMPTS_TRY_LATER",
        "errors": [
            {
                "message": "TOO_MANY_ATTEMPTS_TRY_LATER",
                "domain": "global",
                "reason": "invalid"
            }
        ]
    }
}

[2023-08-17 08:31:37] [22] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-17 08:31:37] [22] [INFO] Setting default IDP sign up body values
[2023-08-17 08:31:37] [22] [INFO] Setting up IDP method to SIGN_IN_WITH_PASSWORD
[2023-08-17 08:31:37] [22] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-17 08:31:37] [22] [INFO] Sending PostSignInWithPassword IDP method to get access token
[2023-08-17 08:31:37] [22] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifefitnesspostman+69409352@gmail.com",
    "password": "lifefitnesspostman+69409352@gmail.com"
}
HTTP/1.1 400 Bad Request
Date: Thu, 17 Aug 2023 08:31:37 GMT
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Type: application/json; charset=UTF-8
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "error": {
        "code": 400,
        "message": "EMAIL_NOT_FOUND",
        "errors": [
            {
                "message": "EMAIL_NOT_FOUND",
                "domain": "global",
                "reason": "invalid"
            }
        ]
    }
}

[2023-08-17 08:31:37] [22] [INFO] Setting default deny user to facility body values
[2023-08-17 08:31:37] [22] [INFO] Getting Halo Core dev base URL
[2023-08-17 08:31:37] [22] [INFO] Base properties loaded: api/core/controllers/user/facilityaccess/postfacilityaccessdeny/facility_access_deny.properties
[2023-08-17 08:31:37] [22] [INFO] Request method:	POST
Request URI:	https://dev-halo5api1.halo.fitness/halo-core-service/api/v1/users/facility-access/deny
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Authorization=Bearer null
				Content-Type=application/json; charset=UTF-8
Body:
{
    "email": "lifeFitnessPostman+17700381@gmail.com",
    "facilityIds": [
        31125
    ]
}
HTTP/1.1 401 Unauthorized
X-Goog-IAP-Generated-Response: true
Date: Thu, 17 Aug 2023 08:31:37 GMT
Content-Type: text/html
Server: Google Frontend
Content-Length: 92
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000

<html>
  <body>Invalid GCIP ID token: Expected JWT to have 3 parts separated by a '.' but there are 1 parts</body>
</html>

[2023-08-17 08:31:37] [22] [ERROR] TEST [Migration Backend Auto Tests - checkThatUserCanBeDeniedWithCamelCaseEmail] FAILED at [08:31:37 2023-08-17] - 2 expectations failed.
Expected status code <200> but was <401>.

Expected status line a string containing "OK" doesn't match actual status line "HTTP/1.1 401 Unauthorized".


java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1656)
jdk.internal.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:568)
org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:816)
groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:55)
org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1661)
jdk.internal.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:568)
org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:816)
groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:55)
org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:175)
io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)
com.zebrunner.carina.api.http.HttpClient.send(HttpClient.java:43)
com.zebrunner.carina.api.AbstractApiMethod.callAPI(AbstractApiMethod.java:301)
com.zebrunner.carina.api.AbstractApiMethodV2.callAPI(AbstractApiMethodV2.java:189)
com.zebrunner.carina.api.AbstractApiMethod.callAPI(AbstractApiMethod.java:279)
com.zebrunner.carina.api.AbstractApiMethodV2.callAPI(AbstractApiMethodV2.java:181)
com.lifefitness.qa.api.core.controllers.user.postfacilityaccessdeny.PostFacilityAccessDenyTest.checkThatUserCanBeDeniedWithCamelCaseEmail(PostFacilityAccessDenyTest.java:61)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:568)
org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
java.base/java.lang.Thread.run(Thread.java:833)
