{
  "uid" : "9decb264247a83bd",
  "name" : "Check reset password with user does not exist in IDP with camel case email",
  "fullName" : "com.lifefitness.qa.api.utils.controllers.password.postresetpassword.PostResetPasswordTest.checkResetPasswordUserDoesNotExistInIDPWithCamelCaseEmail",
  "historyId" : "78f1edcb65b3b1472b99522e8bc5a875",
  "time" : {
    "start" : 1692026407657,
    "stop" : 1692026407776,
    "duration" : 119
  },
  "status" : "broken",
  "statusMessage" : "Unable to reset password",
  "statusTrace" : "java.lang.RuntimeException: Unable to reset password\n\tat com.lifefitness.qa.api.systemutilscontrollers.password.postresetpassword.PostResetPasswordHelper.resetPasswordExpectFailure(PostResetPasswordHelper.java:23)\n\tat com.lifefitness.qa.api.utils.controllers.password.postresetpassword.PostResetPasswordTest.checkResetPasswordUserDoesNotExistInIDPWithCamelCaseEmail(PostResetPasswordTest.java:156)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)\n\tat org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.lang.String` from Array value (token `JsonToken.START_ARRAY`)\n at [Source: (String)\"{\"timestamp\":[2023,8,14,15,20,7,757887349],\"errorCode\":400,\"title\":\"BAD_REQUEST\",\"details\":\"User does not exist\",\"path\":null}\"; line: 1, column: 14] (through reference chain: com.lifefitness.qa.utils.generalmodels.ErrorResponseModel[\"timestamp\"])\n\tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)\n\tat com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1746)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1520)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(StdDeserializer.java:222)\n\tat com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:46)\n\tat com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:11)\n\tat com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:138)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:314)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)\n\tat com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4730)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3677)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3645)\n\tat com.lifefitness.qa.api.systemutilscontrollers.password.postresetpassword.PostResetPasswordHelper.resetPasswordExpectFailure(PostResetPasswordHelper.java:21)\n\t... 16 more\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "executeBeforeTestSuite",
    "time" : {
      "start" : 1692025853789,
      "stop" : 1692025853892,
      "duration" : 103
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setUpTokenForBackend",
    "time" : {
      "start" : 1692025853894,
      "stop" : 1692025854220,
      "duration" : 326
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "onCarinaAfterMethod",
    "time" : {
      "start" : 1692026407780,
      "stop" : 1692026407781,
      "duration" : 1
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "deleteAllEmails",
    "time" : {
      "start" : 1692027024237,
      "stop" : 1692027026281,
      "duration" : 2044
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "package",
    "value" : "com.lifefitness.qa.api.utils.controllers.password.postresetpassword.PostResetPasswordTest"
  }, {
    "name" : "testClass",
    "value" : "com.lifefitness.qa.api.utils.controllers.password.postresetpassword.PostResetPasswordTest"
  }, {
    "name" : "testMethod",
    "value" : "checkResetPasswordUserDoesNotExistInIDPWithCamelCaseEmail"
  }, {
    "name" : "parentSuite",
    "value" : "LifeFitness Backend Auto Tests"
  }, {
    "name" : "suite",
    "value" : "LifeFitness Backend Auto Tests"
  }, {
    "name" : "subSuite",
    "value" : "com.lifefitness.qa.api.utils.controllers.password.postresetpassword.PostResetPasswordTest"
  }, {
    "name" : "host",
    "value" : "8e73c9c5-b733-49e4-b19d-d8e588aad29d-gkcth"
  }, {
    "name" : "thread",
    "value" : "298@8e73c9c5-b733-49e4-b19d-d8e588aad29d-gkcth.TestNG-test=LifeFitness Backend Auto Tests-5(25)"
  }, {
    "name" : "framework",
    "value" : "testng"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "owner",
    "value" : "Dmitry Parkhomenko"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "owner" : "Dmitry Parkhomenko",
    "retries" : [ {
      "uid" : "ed89ffad420ccb16",
      "status" : "skipped",
      "statusDetails" : "Unable to reset password",
      "time" : {
        "start" : 1692026407488,
        "stop" : 1692026407654,
        "duration" : 166
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9decb264247a83bd.json",
  "parameterValues" : [ ]
}