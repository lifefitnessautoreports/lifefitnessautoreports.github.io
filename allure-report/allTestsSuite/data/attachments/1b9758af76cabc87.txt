[2023-08-18 03:24:44] [25] [WARN] Reporting disabled: using no op test run registrar
[2023-08-18 03:24:44] [25] [INFO] TEST [LifeFitness Backend Auto Tests - checkUpdatingPasswordWithPasswordAsEmptyString] STARTED at [15:24:44 2023-08-18]
[2023-08-18 03:24:44] [25] [INFO] Setting default IDP sign up body values
[2023-08-18 03:24:44] [25] [INFO] Setting up IDP method to SIGN_UP
[2023-08-18 03:24:44] [25] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-18 03:24:44] [25] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-18 03:24:44] [25] [INFO] Sending PostSignUp IDP method to get access token
[2023-08-18 03:24:45] [25] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifeFitnessPostman+54471946@gmail.com",
    "password": "jytpcnxl55dvoig"
}
HTTP/1.1 200 OK
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Date: Fri, 18 Aug 2023 15:24:45 GMT
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Content-Type: application/json; charset=UTF-8
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "kind": "identitytoolkit#SignupNewUserResponse",
    "idToken": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjYzODBlZjEyZjk1ZjkxNmNhZDdhNGNlMzg4ZDJjMmMzYzIzMDJmZGUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vbGZjby1kZXYiLCJhdWQiOiJsZmNvLWRldiIsImF1dGhfdGltZSI6MTY5MjM3MjI4NSwidXNlcl9pZCI6InZnejFrNmp3U1pXN3FEcWV0VTAwQXJua2NHdzIiLCJzdWIiOiJ2Z3oxazZqd1NaVzdxRHFldFUwMEFybmtjR3cyIiwiaWF0IjoxNjkyMzcyMjg1LCJleHAiOjE2OTIzNzU4ODUsImVtYWlsIjoibGlmZWZpdG5lc3Nwb3N0bWFuKzU0NDcxOTQ2QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJsaWZlZml0bmVzc3Bvc3RtYW4rNTQ0NzE5NDZAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.GeWLNaJ794BTVOeHyp4XIneAqg6qzlRz3yf_O4K379R1wL-Gh5L7QcZ-2V8JV37EkDIa2dytwNgaLBzG9f3bONsdUp7dQAXUGKzCeHvrcch3dqrac1DlpRAv6RP486jfVayciCfRPna8tWiRfs3NiVhuf5YqGAvCvou65unDV679hVtF8oMTZfA-M2f6mridAujELGgODXCER0tHPzhup7OXXxfzCiqI6viAHsbW4KPXNYd7qjSgijhHdKRjdpATvdSyBrR7UVAA2TNZUuAl9hPTHDvQXxsDgCN1wuzSRtYEV8nX6ZIRI4eemJ2NvpnVLQ_E7VQg-StYQsMD0fXRrg",
    "email": "lifefitnesspostman+54471946@gmail.com",
    "refreshToken": "AMf-vBzFGg6H4DkQpIWwCqtUa_eX-muzYe_gdK5kapPT1FgoQpCwoG8lTgcg2SyzghjD-qTnRWUzUKoA6lrclwBxIPrcIgHU6TwbjQJ7aAon85prQpAvT72Sl8D1rmB71dsQR7VLqzQdoOY1AX8yUQNbFFScu0ozW_vDxlr61Cyo7m6cVEQ7x1vAYSffbIoZYwFpnXF5hmI0AoBtMzCPydXgwqcmox4Wpg",
    "expiresIn": "3600",
    "localId": "vgz1k6jwSZW7qDqetU00ArnkcGw2"
}

[2023-08-18 03:24:45] [25] [INFO] Setting default IDP sign up body values
[2023-08-18 03:24:45] [25] [INFO] Setting up IDP method to SIGN_IN_WITH_PASSWORD
[2023-08-18 03:24:45] [25] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-18 03:24:45] [25] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-18 03:24:45] [25] [INFO] Sending PostSignInWithPassword IDP method to get access token
[2023-08-18 03:24:45] [25] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifeFitnessPostman+54471946@gmail.com",
    "password": "jytpcnxl55dvoig"
}
HTTP/1.1 200 OK
Date: Fri, 18 Aug 2023 15:24:45 GMT
Pragma: no-cache
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Content-Type: application/json; charset=UTF-8
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "kind": "identitytoolkit#VerifyPasswordResponse",
    "localId": "vgz1k6jwSZW7qDqetU00ArnkcGw2",
    "email": "lifefitnesspostman+54471946@gmail.com",
    "displayName": "",
    "idToken": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjYzODBlZjEyZjk1ZjkxNmNhZDdhNGNlMzg4ZDJjMmMzYzIzMDJmZGUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vbGZjby1kZXYiLCJhdWQiOiJsZmNvLWRldiIsImF1dGhfdGltZSI6MTY5MjM3MjI4NSwidXNlcl9pZCI6InZnejFrNmp3U1pXN3FEcWV0VTAwQXJua2NHdzIiLCJzdWIiOiJ2Z3oxazZqd1NaVzdxRHFldFUwMEFybmtjR3cyIiwiaWF0IjoxNjkyMzcyMjg1LCJleHAiOjE2OTIzNzU4ODUsImVtYWlsIjoibGlmZWZpdG5lc3Nwb3N0bWFuKzU0NDcxOTQ2QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJsaWZlZml0bmVzc3Bvc3RtYW4rNTQ0NzE5NDZAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.GeWLNaJ794BTVOeHyp4XIneAqg6qzlRz3yf_O4K379R1wL-Gh5L7QcZ-2V8JV37EkDIa2dytwNgaLBzG9f3bONsdUp7dQAXUGKzCeHvrcch3dqrac1DlpRAv6RP486jfVayciCfRPna8tWiRfs3NiVhuf5YqGAvCvou65unDV679hVtF8oMTZfA-M2f6mridAujELGgODXCER0tHPzhup7OXXxfzCiqI6viAHsbW4KPXNYd7qjSgijhHdKRjdpATvdSyBrR7UVAA2TNZUuAl9hPTHDvQXxsDgCN1wuzSRtYEV8nX6ZIRI4eemJ2NvpnVLQ_E7VQg-StYQsMD0fXRrg",
    "registered": true,
    "refreshToken": "AMf-vBwDoFJL4QJMOTOQb4ME5XVzRoXk244jGcxHPw9k_EToWxip8_0AdY_Zt8el0okmg-Wq4ArUoOaJK01HyxoEVsx7Kt3191bnllV41MaKbEwJmkYc4bInH2B7uYL9Gmfak-sthgrYQEIfm0r5e_D1bel9xG69WkoBlSgU-kNU4NoRZWxsUzsLcp0-2KxAoLSzWgEH6HSayaOkLcyAz751_54Gr7qwjg",
    "expiresIn": "3600"
}

[2023-08-18 03:24:46] [25] [INFO] Request method:	POST
Request URI:	https://dev-halo5api1.halo.fitness/halo-system-utils/api/v1/password/reset?email=lifeFitnessPostman%2B54471946%40gmail.com
Request params:	<none>
Query params:	email=lifeFitnessPostman+54471946@gmail.com
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Authorization=P3jxJislR3PNt1P1gQxXepwRY8RiHGTps+Yld/5Ot50=
				Content-Type=application/json; charset=UTF-8
Body:			<none>
HTTP/1.1 201 Created
vary: Origin,Access-Control-Request-Method,Access-Control-Request-Headers
x-content-type-options: nosniff
x-xss-protection: 0
cache-control: no-cache, no-store, max-age=0, must-revalidate
pragma: no-cache
expires: 0
strict-transport-security: max-age=31536000 ; includeSubDomains
x-frame-options: DENY
X-Cloud-Trace-Context: 04cc05497115507c0301e45b57666612
Date: Fri, 18 Aug 2023 15:24:46 GMT
Content-Type: text/html
Server: Google Frontend
Content-Length: 0
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000



[2023-08-18 03:24:46] [25] [INFO] Waiting for 0.5 sec till email comes
[2023-08-18 03:24:47] [25] [INFO] Waiting for 0.5 sec till email comes
[2023-08-18 03:24:47] [25] [INFO] Waiting for 0.5 sec till email comes
[2023-08-18 03:24:48] [25] [INFO] Waiting for 0.5 sec till email comes
[2023-08-18 03:24:48] [25] [INFO] Waiting for 0.5 sec till email comes
[2023-08-18 03:24:49] [25] [INFO] Waiting for 0.5 sec till email comes
[2023-08-18 03:24:49] [25] [INFO] Waiting for 0.5 sec till email comes
[2023-08-18 03:24:50] [25] [INFO] Hi lifefitnesspostman+54471946@gmail.com, You requested a password reset for Halo Facility account. Please click the button below to reset password and this request will expire in 24 hours. Reset
[2023-08-18 03:24:50] [25] [INFO] Base properties loaded: api/utils/controllers/password/postupdatepassword/rq_update_password.properties
[2023-08-18 03:24:50] [25] [INFO] Update password expecting error response code
[2023-08-18 03:24:50] [25] [INFO] Request method:	POST
Request URI:	https://dev-halo5api1.halo.fitness/halo-system-utils/api/v1/password/update
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Authorization=P3jxJislR3PNt1P1gQxXepwRY8RiHGTps+Yld/5Ot50=
				Content-Type=application/json; charset=UTF-8
Body:
{
    "email": "lifeFitnessPostman+54471946@gmail.com",
    "token": "fcbf676a-ecfa-4ecb-abad-966e1e3cbdf3",
    "encodedPassword": ""
}
HTTP/1.1 400 Bad Request
vary: Origin,Access-Control-Request-Method,Access-Control-Request-Headers
x-content-type-options: nosniff
x-xss-protection: 0
cache-control: no-cache, no-store, max-age=0, must-revalidate
pragma: no-cache
expires: 0
strict-transport-security: max-age=31536000 ; includeSubDomains
x-frame-options: DENY
content-type: application/problem+json
X-Cloud-Trace-Context: 7419a560fc67803c85329b7d544ce439;o=1
Date: Fri, 18 Aug 2023 15:24:50 GMT
Server: Google Frontend
Content-Length: 148
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000

{
    "type": "about:blank",
    "title": "Bad Request",
    "status": 400,
    "detail": "Invalid request content.",
    "instance": "/halo-system-utils/api/v1/password/update"
}

[2023-08-18 03:24:50] [25] [INFO] Assert that password can't be updated when encodedPassword is empty
[2023-08-18 03:24:50] [25] [ERROR] TEST [LifeFitness Backend Auto Tests - checkUpdatingPasswordWithPasswordAsEmptyString] SKIPPED at [15:24:50 2023-08-18] - Error title is incorrect expected [EncodedPassword can't be empty] but found [Bad Request]

org.testng.Assert.fail(Assert.java:110)
org.testng.Assert.failNotEquals(Assert.java:1577)
org.testng.Assert.assertEqualsImpl(Assert.java:149)
org.testng.Assert.assertEquals(Assert.java:131)
org.testng.Assert.assertEquals(Assert.java:655)
com.lifefitness.qa.api.utils.controllers.password.postupdatepassword.PostUpdatePasswordTest.checkUpdatingPasswordWithPasswordAsEmptyString(PostUpdatePasswordTest.java:389)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:568)
org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
java.base/java.lang.Thread.run(Thread.java:833)
[2023-08-18 03:24:50] [25] [INFO] Attaching logs to Allure report
