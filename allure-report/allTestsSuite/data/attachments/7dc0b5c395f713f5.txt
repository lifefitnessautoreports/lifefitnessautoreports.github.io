[2023-08-18 08:09:00] [23] [INFO] TEST [LifeFitness Backend Auto Tests - checkThatEncodedPasswordFieldExpectsEncodedPassword] STARTED at [20:09:00 2023-08-18]
[2023-08-18 08:09:00] [23] [INFO] Setting default registration body values
[2023-08-18 08:09:00] [23] [INFO] Base properties loaded: api/core/controllers/user/postregistration/registration.properties
[2023-08-18 08:09:00] [23] [INFO] Get country code except embargoed ones
[2023-08-18 08:09:00] [23] [INFO] Waiting for 0.1 sec to cool Core Backend off
[2023-08-18 08:09:00] [23] [INFO] Registering user with lifeFitnessPostman+64322657@gmail.com email
[2023-08-18 08:09:01] [23] [INFO] Request method:	POST
Request URI:	https://dev-halo5api1.halo.fitness/halo-core-service/api/v1/users/registration
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Authorization=Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjYzODBlZjEyZjk1ZjkxNmNhZDdhNGNlMzg4ZDJjMmMzYzIzMDJmZGUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vbGZjby1kZXYiLCJhdWQiOiJsZmNvLWRldiIsImF1dGhfdGltZSI6MTY5MjM4ODk0MCwidXNlcl9pZCI6ImVSaHlnYmJnemRnaEoyOWYycEhlaHV5WGNPTTIiLCJzdWIiOiJlUmh5Z2JiZ3pkZ2hKMjlmMnBIZWh1eVhjT00yIiwiaWF0IjoxNjkyMzg4OTQwLCJleHAiOjE2OTIzOTI1NDAsImVtYWlsIjoiYXV0b3Rlc3R1c2VyQGxpZmVmaXRuZXNzLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7ImVtYWlsIjpbImF1dG90ZXN0dXNlckBsaWZlZml0bmVzcy5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.gCmXsNcuWUTG_jTD1Y2PaTwDmRNfWa8k1OJDefpH1W6ghe7W0lqJ7w4rdeizsOoSYOoyPoq2NP8n1uzKb31Pn1z00AEm-lEFdVVjvtX9ymd_Yxv1y0cLC0iJaVd-YL5z9imlDHdP_Yu815y-kKDxT9CH3xWF7H_pCqOwkF2-OtmT3pmZCFbpF99oXN9G5ZFgvD-fqpVjL-RC-XlQqqnpxiWqLjtTuJnyGH904wO1SgF2qMvWAk2ndYTBAPDUDgL19bmyUF7RssDKBbCv5OOS-ehSzJ24-LUbWTK2XgfEPkD6akktnn_ci7Aed_L3VqGShuq7-HtKbrhZcok-pf3Oiw
				Content-Type=application/json; charset=UTF-8
Body:
{
    "user": {
        "id": 0,
        "firstName": "Brian",
        "lastName": "Carroll",
        "email": "lifeFitnessPostman+64322657@gmail.com",
        "preferredUnit": "METRICS",
        "preferredLanguageCode": "",
        "phoneNumber": "",
        "officePhoneNumber": "",
        "imageUrl": "",
        "imageKey": "",
        "thumbnailUrl": "",
        "thumbnailKey": "",
        "isAllowedMarketingEmails": null,
        "isAllowedFeedbackProviding": null,
        "useTerms": null
    },
    "facility": {
        "id": 0,
        "legacyId": 0,
        "ipAddress": "",
        "facilityGroupId": 0,
        "name": "Metz, Weber and Heller",
        "facilityTypeId": 0,
        "address": {
            "placeId": "6e95e8af-761e-45a5-8403-34e490fd88fe",
            "primaryStreet": "6806 Clifton Ways",
            "secondaryStreet": "Suite 093",
            "city": "Trantowstad",
            "region": "",
            "zipCode": "223610",
            "state": "",
            "countryCode": "HK",
            "latitude": "30.6279",
            "longitude": "22.7323",
            "country": "string",
            "formatAddress": "string",
            "rawData": "string"
        },
        "contactNumber": "2335305071",
        "timezone": "",
        "openTime": "10:00 AM",
        "closeTime": "6:00 PM",
        "isOpen24Hours": true
    }
}
HTTP/1.1 201 Created
vary: Origin,Access-Control-Request-Method,Access-Control-Request-Headers
x-content-type-options: nosniff
x-xss-protection: 0
cache-control: no-cache, no-store, max-age=0, must-revalidate
pragma: no-cache
expires: 0
strict-transport-security: max-age=31536000 ; includeSubDomains
x-frame-options: DENY
content-type: application/json
X-Cloud-Trace-Context: 7d3ce9566379828a32486bb9b2cdbec0
Date: Fri, 18 Aug 2023 20:09:01 GMT
Server: Google Frontend
Content-Length: 985
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000

{
    "user": {
        "id": 45222,
        "firstName": "Brian",
        "lastName": "Carroll",
        "email": "lifefitnesspostman+64322657@gmail.com",
        "preferredUnit": "METRICS",
        "preferredLanguageCode": "en-US",
        "phoneNumber": "",
        "officePhoneNumber": "",
        "profilePicUrl": null,
        "imageKey": "",
        "isEnabled": true,
        "isAllowedMarketingEmails": true,
        "isAllowedFeedbackProviding": true,
        "useTerms": true,
        "encodedPassword": null,
        "status": "ACTIVE",
        "roleIds": [
            2
        ]
    },
    "facility": {
        "id": 33968,
        "legacyId": 0,
        "ipAddress": "",
        "facilityGroupId": null,
        "name": "Metz, Weber and Heller",
        "facilityTypeId": null,
        "address": {
            "id": 33992,
            "placeId": "6e95e8af-761e-45a5-8403-34e490fd88fe",
            "primaryStreet": "6806 Clifton Ways",
            "secondaryStreet": "Suite 093",
            "city": "Trantowstad",
            "region": "APAC",
            "zipCode": "223610",
            "state": "",
            "countryCode": "HK",
            "latitude": 30.6279,
            "longitude": 22.7323,
            "country": "string",
            "formatAddress": "string",
            "rawData": "string"
        },
        "contactNumber": "2335305071",
        "timezone": "Africa/Tripoli (GMT+2:00)",
        "openTime": "10:00 AM",
        "closeTime": "6:00 PM",
        "isOpen24Hours": true
    }
}

[2023-08-18 08:09:01] [23] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-18 08:09:01] [23] [INFO] Setting default IDP sign up body values
[2023-08-18 08:09:01] [23] [INFO] Setting up IDP method to SIGN_UP
[2023-08-18 08:09:01] [23] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-18 08:09:01] [23] [INFO] Sending PostSignUp IDP method to get access token
[2023-08-18 08:09:02] [23] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifefitnesspostman+64322657@gmail.com",
    "password": "lifefitnesspostman+64322657@gmail.com"
}
HTTP/1.1 400 Bad Request
Date: Fri, 18 Aug 2023 20:09:02 GMT
Pragma: no-cache
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Type: application/json; charset=UTF-8
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "error": {
        "code": 400,
        "message": "TOO_MANY_ATTEMPTS_TRY_LATER",
        "errors": [
            {
                "message": "TOO_MANY_ATTEMPTS_TRY_LATER",
                "domain": "global",
                "reason": "invalid"
            }
        ]
    }
}

[2023-08-18 08:09:02] [23] [INFO] Waiting for 0.1 sec before IDP cooling off
[2023-08-18 08:09:02] [23] [INFO] Setting default IDP sign up body values
[2023-08-18 08:09:02] [23] [INFO] Setting up IDP method to SIGN_IN_WITH_PASSWORD
[2023-08-18 08:09:02] [23] [INFO] Base properties loaded: api/identityplatform/idp.properties
[2023-08-18 08:09:02] [23] [INFO] Sending PostSignInWithPassword IDP method to get access token
[2023-08-18 08:09:02] [23] [INFO] Request method:	POST
Request URI:	https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Request params:	<none>
Query params:	key=AIzaSyDuJaUYc3JtGHvbdX_7b-Nav25lXPmzuN0
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Body:
{
    "returnSecureToken": true,
    "email": "lifefitnesspostman+64322657@gmail.com",
    "password": "lifefitnesspostman+64322657@gmail.com"
}
HTTP/1.1 400 Bad Request
Expires: Mon, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Date: Fri, 18 Aug 2023 20:09:02 GMT
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Vary: Origin
Vary: X-Origin
Vary: Referer
Content-Type: application/json; charset=UTF-8
Content-Encoding: gzip
Server: ESF
X-XSS-Protection: 0
X-Frame-Options: SAMEORIGIN
X-Content-Type-Options: nosniff
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
Transfer-Encoding: chunked

{
    "error": {
        "code": 400,
        "message": "EMAIL_NOT_FOUND",
        "errors": [
            {
                "message": "EMAIL_NOT_FOUND",
                "domain": "global",
                "reason": "invalid"
            }
        ]
    }
}

[2023-08-18 08:09:02] [23] [INFO] Setting default put users profile body values
[2023-08-18 08:09:02] [23] [INFO] Base properties loaded: api/core/controllers/user/putusersprofile/put_users_profile.properties
[2023-08-18 08:09:02] [23] [INFO] Updating users profile user expecting error response code
[2023-08-18 08:09:02] [23] [INFO] Request method:	PUT
Request URI:	https://dev-halo5api1.halo.fitness/halo-core-service/api/v1/users/profile
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Multiparts:		<none>
Cookies:		<none>
Headers:		Accept=*/*
				Authorization=Bearer null
				Content-Type=application/json; charset=UTF-8
Body:
{
    "firstName": "UPDATED_NAME",
    "lastName": "UPDATED_LAST_NAME",
    "email": "lifefitnesspostman+64322657@gmail.com",
    "preferredUnit": "METRICS",
    "preferredLanguageCode": "fr",
    "encodedPassword": "notEncodedPassword"
}
HTTP/1.1 401 Unauthorized
X-Goog-IAP-Generated-Response: true
Date: Fri, 18 Aug 2023 20:09:02 GMT
Content-Type: text/html
Server: Google Frontend
Content-Length: 92
Via: 1.1 google
Alt-Svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000

<html>
  <body>Invalid GCIP ID token: Expected JWT to have 3 parts separated by a '.' but there are 1 parts</body>
</html>

[2023-08-18 08:09:02] [23] [ERROR] TEST [LifeFitness Backend Auto Tests - checkThatEncodedPasswordFieldExpectsEncodedPassword] FAILED at [20:09:02 2023-08-18] - Unable to update users profile

com.lifefitness.qa.api.corecontrollers.user.putusersprofile.PutUsersProfileHelper.putUsersProfileExpectFailure(PutUsersProfileHelper.java:41)
com.lifefitness.qa.api.core.controllers.user.putusersprofile.PutUsersProfileTest.checkThatEncodedPasswordFieldExpectsEncodedPassword(PutUsersProfileTest.java:320)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:568)
org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
java.base/java.lang.Thread.run(Thread.java:833)
